name: Deploy Yii2 Application

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/yii2-app:latest,${{ secrets.DOCKER_USERNAME }}/yii2-app:${{ github.sha }}
        
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /opt/yii2-app
          git pull
          export DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/yii2-app:${{ github.sha }}
          docker stack deploy -c docker-compose.yml yii2-app --with-registry-auth
          
    - name: Verify Deployment
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Wait for deployment to complete
          sleep 30
          # Check if services are running
          docker service ls | grep yii2-app
          # Check container health
          docker service ps yii2-app_yii2-app --no-trunc
          
    - name: Rollback on failure
      if: failure()
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Rollback to previous version if available
          docker service update --rollback yii2-app_yii2-app
